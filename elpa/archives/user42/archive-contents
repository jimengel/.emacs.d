(1
 (ac-tex-ref .
	     [(3)
	      nil "auto-complete for tex-mode \\ref and \\cite labels" single
	      ((:url . "http://user42.tuxfamily.org/ac-tex-ref/index.html"))])
 (accjournal .
	     [(8)
	      nil "double entry journal accounting" single
	      ((:url . "http://user42.tuxfamily.org/accjournal/index.html"))])
 (align-let .
	    [(13)
	     nil "align expressions in a lisp \"let\"" single
	     ((:url . "http://user42.tuxfamily.org/align-let/index.html"))])
 (arc-lzh-exe .
	      [(8)
	       nil "archive-mode support for LHa self-extracting .exe" single
	       ((:url . "http://user42.tuxfamily.org/arc-lzh-exe/index.html"))])
 (areabrowse .
	     [(4)
	      nil "browse diku mud .are area files" single
	      ((:url . "http://user42.tuxfamily.org/areabrowse/index.html"))])
 (aumix-mode .
	     [(7)
	      nil "run the aumix program in a buffer" single
	      ((:url . "http://user42.tuxfamily.org/aumix-mode/index.html"))])
 (bytecomp-simplify .
		    [(18)
		     nil "byte compile warnings for simplifications" single
		     ((:url . "http://user42.tuxfamily.org/bytecomp-simplify/index.html"))])
 (checkdoc-autoload .
		    [(3)
		     nil "check for various autoload cookies" single
		     ((:url . "http://user42.tuxfamily.org/checkdoc-autoload/index.html"))])
 (checkdoc-batch .
		 [(7)
		  nil "batch report of M-x checkdoc things" single
		  ((:url . "http://user42.tuxfamily.org/checkdoc-batch/index.html"))])
 (checkdoc-keywords .
		    [(7)
		     nil "check for known values in Keywords header" single
		     ((:url . "http://user42.tuxfamily.org/checkdoc-keywords/index.html"))])
 (checkdoc-url-buttonize .
			 [(2)
			  nil "check URL `' linking in docstrings" single
			  ((:url . "http://user42.tuxfamily.org/checkdoc-url-buttonize/index.html"))])
 (cl-loop-aplist .
		 [(5)
		  nil "cl loop macro alist and plist support" single
		  ((:url . "http://user42.tuxfamily.org/cl-loop-aplist/index.html"))])
 (compilation-always-kill .
			  [(6)
			   nil "kill compilation without prompting" single
			   ((:url . "http://user42.tuxfamily.org/compilation-always-kill/index.html"))])
 (compilation-emacs21-batch .
			    [(6)
			     nil "error regexps for emacs21 byte compiler" single
			     ((:url . "http://user42.tuxfamily.org/compilation-emacs21-batch/index.html"))])
 (compilation-ledger .
		     [(3)
		      nil "error regexps for ledger" single
		      ((:url . "http://user42.tuxfamily.org/compilation-ledger/index.html"))])
 (compilation-onewin .
		     [(4)
		      nil "whole-frame window for compile buffer" single
		      ((:url . "http://user42.tuxfamily.org/compilation-onewin/index.html"))])
 (compilation-perl .
		   [(14)
		    nil "extra error regexps for Perl" single
		    ((:url . "http://user42.tuxfamily.org/compilation-perl/index.html"))])
 (compilation-recenter-end .
			   [(7)
			    nil "compilation-mode window recentre" single
			    ((:url . "http://user42.tuxfamily.org/compilation-recenter-end/index.html"))])
 (compilation-weblint .
		      [(6)
		       nil "error regexps for weblint" single
		       ((:url . "http://user42.tuxfamily.org/compilation-weblint/index.html"))])
 (compile-command-default .
			  [(13)
			   nil "establish a default for M-x compile" single
			   ((:url . "http://user42.tuxfamily.org/compile-command-default/index.html"))])
 (completion-ignored-build .
			   [(13)
			    nil "some built completion-ignored-extensions" single
			    ((:url . "http://user42.tuxfamily.org/completion-ignored-build/index.html"))])
 (copyright-both-ends .
		      [(5)
		       nil "update copyright at start and end of file" single
		       ((:url . "http://user42.tuxfamily.org/copyright-both-ends/index.html"))])
 (diff-save-buffer .
		   [(15)
		    nil "default filename when saving a diff." single
		    ((:url . "http://user42.tuxfamily.org/diff-save-buffer/index.html"))])
 (dired-visit-history .
		      [(4)
		       nil "add dired visited files to find-file history" single
		       ((:url . "http://user42.tuxfamily.org/dired-visit-history/index.html"))])
 (do-not-edit .
	      [(15)
	       nil "read-only buffer for generated files" single
	       ((:url . "http://user42.tuxfamily.org/do-not-edit/index.html"))])
 (elisp-docstring-preview .
			  [(5)
			   nil "preview Emacs Lisp docstring" single
			   ((:url . "http://user42.tuxfamily.org/elisp-docstring-preview/index.html"))])
 (ffap-I-option .
		[(2)
		 nil "recognise -I/usr/include/foo" single
		 ((:url . "http://user42.tuxfamily.org/ffap-I-option/index.html"))])
 (ffap-gcc-path .
		[(8)
		 nil "get gcc's include path for ffap-c-path" single
		 ((:url . "http://user42.tuxfamily.org/ffap-gcc-path/index.html"))])
 (ffap-href .
	    [(5)
	     nil "find href URL/link anywhere in the tag" single
	     ((:url . "http://user42.tuxfamily.org/ffap-href/index.html"))])
 (ffap-include-start .
		     [(11)
		      nil "recognise C #include when at start of line" single
		      ((:url . "http://user42.tuxfamily.org/ffap-include-start/index.html"))])
 (ffap-makefile-vars .
		     [(5)
		      nil "find file with makefile variables expanded" single
		      ((:url . "http://user42.tuxfamily.org/ffap-makefile-vars/index.html"))])
 (ffap-mml .
	   [(10)
	    nil "find Gnus message MML attached file at point" single
	    ((:url . "http://user42.tuxfamily.org/ffap-mml/index.html"))])
 (ffap-perl-module .
		   [(24)
		    nil "find perl module at point with ffap" single
		    ((:url . "http://user42.tuxfamily.org/ffap-perl-module/index.html"))])
 (ffap-pod-F .
	     [(5)
	      nil "follow Perl pod F<filename>" single
	      ((:url . "http://user42.tuxfamily.org/ffap-pod-F/index.html"))])
 (ffap-rfc-directories .
		       [(9)
			nil "look for RFCs in local directories too (for Emacs 22)" single
			((:url . "http://user42.tuxfamily.org/ffap-rfc-directories/index.html"))])
 (ffap-rfc-space .
		 [(12)
		  nil "recognise RFC with a space, like \"RFC 1234\"" single
		  ((:url . "http://user42.tuxfamily.org/ffap-rfc-space/index.html"))])
 (filladapt-pat .
		[(6)
		 nil "add or remove some filladapt patterns" single
		 ((:url . "http://user42.tuxfamily.org/filladapt-pat/index.html"))])
 (formfeed-hline .
		 [(5)
		  nil "display formfeed with horizontal line" single
		  ((:url . "http://user42.tuxfamily.org/formfeed-hline/index.html"))])
 (gtk-look .
	   [(28)
	    nil "lookup Gtk and Gnome documentation." single
	    ((:url . "http://user42.tuxfamily.org/gtk-look/index.html"))])
 (gutenberg-coding .
		   [(15)
		    nil "coding system for Project Gutenberg EBooks." single
		    ((:url . "http://user42.tuxfamily.org/gutenberg-coding/index.html"))])
 (help-xref-elfiles .
		    [(4)
		     nil "buttonize foo.el and .emacs filenames in docstrings" single
		     ((:url . "http://user42.tuxfamily.org/help-xref-elfiles/index.html"))])
 (html-coding .
	      [(13)
	       nil "coding system from meta in html files (for Emacs 21)" single
	       ((:url . "http://user42.tuxfamily.org/html-coding/index.html"))])
 (html-sizes .
	     [(16)
	      nil "maintain file sizes shown for html links" single
	      ((:url . "http://user42.tuxfamily.org/html-sizes/index.html"))])
 (html-smarter-href .
		    [(1)
		     nil "smarter html-href-anchor reading" single
		     ((:url . "http://www.geocities.com/user42_kevin/html-smarter-href/"))])
 (imagetext .
	    [(11)
	     nil "show text parts of image files" single
	     ((:url . "http://user42.tuxfamily.org/imagetext/index.html"))])
 (info-lookmore .
		[(6)
		 nil "more things for info-look.el" single
		 ((:url . "http://user42.tuxfamily.org/info-lookmore/index.html"))])
 (ispell-stopwords .
		   [(9)
		    nil "use perl POD \"=for stopwords\" in ispell" single
		    ((:url . "http://user42.tuxfamily.org/ispell-stopwords/index.html"))])
 (jka-compr-dictzip .
		    [(2)
		     nil "dictzip .dz for jka-compr" single
		     ((:url . "http://user42.tuxfamily.org/jka-compr-dictzip/index.html"))])
 (localedef-overlay .
		    [(4)
		     nil "mode for glibc locale definition files" single
		     ((:url . "http://user42.tuxfamily.org/localedef-overlay/index.html"))])
 (mailcap-mode .
	       [(4)
		nil "mailcap file editing mode" single
		((:url . "http://user42.tuxfamily.org/mailcap-mode/index.html"))])
 (make-mode-fillindent .
		       [(5)
			nil "filling indented makefile comments" single
			((:url . "http://user42.tuxfamily.org/make-mode-fillindent/index.html"))])
 (makeinfo-info .
		[(9)
		 nil "use Info-mode with makeinfo-buffer." single
		 ((:url . "http://user42.tuxfamily.org/makeinfo-info/index.html"))])
 (man-completion .
		 [(35)
		  nil "completion for M-x man" single
		  ((:url . "http://user42.tuxfamily.org/man-completion/index.html"))])
 (man-preview .
	      [(10)
	       nil "preview nroff man file source" single
	       ((:url . "http://user42.tuxfamily.org/man-preview/index.html"))])
 (mine-sweeper-auto .
		    [(6)
		     nil "automated mine sweeping for mine-sweeper.el" single
		     ((:url . "http://user42.tuxfamily.org/mine-sweeper-auto/index.html"))])
 (mo-mode .
	  [(14)
	   nil "view and edit gettext .mo message files" single
	   ((:url . "http://user42.tuxfamily.org/mo-mode/index.html"))])
 (nobreak-fade .
	       [(9)
		nil "some functions for `fill-nobreak-predicate'" single
		((:url . "http://user42.tuxfamily.org/nobreak-fade/index.html"))])
 (nroff-filladapt .
		  [(5)
		   nil "nroff comment prefixes for filladapt" single
		   ((:url . "http://user42.tuxfamily.org/nroff-filladapt/index.html"))])
 (oeis .
       [(8)
	nil "helpers for the Online Encyclopedia of Integer Sequences" single
	((:url . "http://user42.tuxfamily.org/oeis-el/index.html"))])
 (parasep .
	  [(6)
	   nil "more paragraph separators" single
	   ((:url . "http://user42.tuxfamily.org/parasep/index.html"))])
 (pcf2bdf .
	  [(14)
	   nil "view .pcf compiled font files as bdf" single
	   ((:url . "http://user42.tuxfamily.org/pcf2bdf/index.html"))])
 (perl-env-substitute .
		      [(3)
		       nil "Perl style $ENV{VARNAME} in substitute-in-filename" single
		       ((:url . "http://user42.tuxfamily.org/perl-env-substitute/index.html"))])
 (perl-pod-coding .
		  [(8)
		   nil "coding system from =encoding in perl files" single
		   ((:url . "http://user42.tuxfamily.org/perl-pod-coding/index.html"))])
 (perl-pod-gt .
	      [(18)
	       nil "helpers for Perl POD <> markup" single
	       ((:url . "http://user42.tuxfamily.org/perl-pod-gt/index.html"))])
 (perl-pod-preview .
		   [(17)
		    nil "preview perl pod documentation" single
		    ((:url . "http://user42.tuxfamily.org/perl-pod-preview/index.html"))])
 (perl-quote .
	     [(5)
	      nil "helpers for Perl quoted strings" single
	      ((:url . "http://user42.tuxfamily.org/perl-quote/index.html"))])
 (perl-use-utf8-coding .
		       [(5)
			nil "coding system from \"use utf8\" in perl code" single
			((:url . "http://user42.tuxfamily.org/perl-use-utf8-coding/index.html"))])
 (pst-format .
	     [(8)
	      nil "view perl Storable files as human readable text" single
	      ((:url . "http://user42.tuxfamily.org/pst-format/index.html"))])
 (quick-yes .
	    [(9)
	     nil "M-y to answer \"yes\" to `yes-or-no-p'." single
	     ((:url . "http://user42.tuxfamily.org/quick-yes/index.html"))])
 (scroll-1 .
	   [(9)
	    nil "bind j and k to scroll the window up and down" single
	    ((:url . "http://user42.tuxfamily.org/scroll-1/index.html"))])
 (sh-autoconf .
	      [(8)
	       nil "autoconf flavour for sh-mode" single
	       ((:url . "http://user42.tuxfamily.org/sh-autoconf/index.html"))])
 (sqlite-dump .
	      [(9)
	       nil "view dump of sqlite database file" single
	       ((:url . "http://user42.tuxfamily.org/sqlite-dump/index.html"))])
 (startup-file-name-history .
			    [(5)
			     nil "command line files into file-name-history" single
			     ((:url . "http://user42.tuxfamily.org/startup-file-name-history/index.html"))])
 (tcd-format .
	     [(7)
	      nil "view XTide .tcd tide constituent database files" single
	      ((:url . "http://user42.tuxfamily.org/tcd-format/index.html"))])
 (tex-math-preview .
		   [(16)
		    nil "preview TeX math expressions." single
		    ((:url . "http://user42.tuxfamily.org/tex-math-preview/index.html"))])
 (texinfo-nobreak .
		  [(8)
		   nil "texinfo line break workarounds for past makeinfo" single
		   ((:url . "http://user42.tuxfamily.org/texinfo-nobreak/index.html"))])
 (texinfo-warn .
	       [(9)
		nil "warn about tabs and more in texinfo" single
		((:url . "http://user42.tuxfamily.org/texinfo-warn/index.html"))])
 (tty-format .
	     [(10)
	      nil "text file backspacing and ANSI SGR as faces" single
	      ((:url . "http://user42.tuxfamily.org/tty-format/index.html"))])
 (unicode-disp .
	       [(11)
		nil "display-table fallbacks for some unicode chars" single
		((:url . "http://user42.tuxfamily.org/unicode-disp/index.html"))])
 (upstr .
	[(4)
	 nil "up-list out of a string or TeX maths too" single
	 ((:url . "http://user42.tuxfamily.org/upstr/index.html"))])
 (variable-at-point-tick .
			 [(4)
			  nil "variable-at-point on a 'foo (for Emacs 23)" single
			  ((:url . "http://user42.tuxfamily.org/variable-at-point-tick/index.html"))])
 (weblint .
	  [(5)
	   nil "run the weblint program" single
	   ((:url . "http://user42.tuxfamily.org/weblint/index.html"))])
 (wx-look .
	  [(6)
	   nil "lookup wxWidgets functions in its manual." single
	   ((:url . "http://user42.tuxfamily.org/wx-look/index.html"))])
 (xml-coding .
	     [(9)
	      nil "coding system from tag in xml files (for Emacs 21)" single
	      ((:url . "http://user42.tuxfamily.org/xml-coding/index.html"))])
 (xtide .
	[(26)
	 nil "XTide display in Emacs" single
	 ((:url . "http://user42.tuxfamily.org/xtide/index.html"))])
 (gp-inline .
	    [(1)
	     nil "evaluate Pari/GP expressions inline in a document" single
	     ((:url . "http://user42.tuxfamily.org/gp-inline/index.html"))]))

